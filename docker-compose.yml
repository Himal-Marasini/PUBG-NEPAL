version: "3"

# Different container for db and backend and Linking it with links
# services:
#   pubg-server-1:
#     build: .
#     ports:
#       - 3000
#     links:
#       - mongo
#   pubg-server-2:
#     build: .
#     ports:
#       - 3000
#     links:
#       - mongo
#   pubg-server-3:
#     build: .
#     ports:
#       - 3000
#     links:
#       - mongo
#   load-balancer:
#     build: nginx/
#     ports:
#       - 80:80
#       - 443:443
#     links:
#       - pubg-server-1
#       - pubg-server-2
#       - pubg-server-3
#     volumes:
#       - ./nginx/certbot/conf: etc/letsencrypt
#       - ./nginx/certbot/www: /var/www/certbot
#     command: /bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'
#   mongo:
#     container_name: mongo
#     image: mongo
#     ports:
#       - 27017:27017
#   certbot:
#      image: certbot/certbot
#      volumes:
#       - ./nginx/certbot/conf: etc/letsencrypt
#       - ./nginx/certbot/www: /var/www/certbot
#      entrypoint: /bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'

services:
  pubg-server-1:
    build: .
    ports:
      - 3000
    links:
      - mongo
  pubg-server-2:
    build: .
    ports:
      - 3000
    links:
      - mongo
  pubg-server-3:
    build: .
    ports:
      - 3000
    links:
      - mongo
  load-balancer:
    image: nginx:1.15-alpine
    ports:
      - 80:80
      - 443:443
    links:
      - pubg-server-1
      - pubg-server-2
      - pubg-server-3
    volumes:
      - ./nginx/nginx:/etc/nginx/conf.d
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  mongo:
    container_name: mongo
    image: mongo
    ports:
      - 27017:27017
  certbot:
     image: certbot/certbot
     volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
     entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"